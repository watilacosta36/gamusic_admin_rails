services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: gamusic_admin_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for Action Cable, background jobs, etc.)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Rails Application
  web:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    environment:
      # Database configuration
      DATABASE_URL: postgresql://postgres:postgres@db:5432/gamusic_admin_development
      REDIS_URL: redis://redis:6379/0
      
      # Rails configuration
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
      
      # Supabase configuration (will be overridden by .env)
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    stdin_open: true
    tty: true
    command: >
      bash -c "
        echo 'Waiting for database...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'Database is ready!' &&
        rm -f tmp/pids/server.pid &&
        bundle exec rails db:prepare &&
        echo 'Starting Rails server...' &&
        bundle exec rails server -b 0.0.0.0
      "

  # Optional: Adminer for database management
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  postgres_data:
  redis_data:
  bundle_cache: